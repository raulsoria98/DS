/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package p2;

import java.awt.BorderLayout;
import java.awt.event.WindowAdapter;
import java.util.concurrent.TimeUnit;

/**
 *
 * @author juse
 */
public class Salpicadero extends javax.swing.JPanel {

    private double rpm;
    private double velocidad;
    private double distancia;
    private double distanciaTotal;
    private EstadoMotor estado;
    
    private long inicio;
    private long fin;
    
    private Velocimetro velocimetro;
    private CuentaKilometros cuentaKilometros;
    private CuentaRevoluciones cuentaRevoluciones;
    
    static final double RADIO = 0.15;
    static final int LIMITE = 5000;

    /**
     * Creates new form Salpicadero
     */
    public Salpicadero() {
        rpm = 0;
        velocidad = 0;
        distancia = 0;
        distanciaTotal = 0;
        estado = EstadoMotor.APAGADO;
        
        initComponents();
        inicio = System.currentTimeMillis();
        fin = 0;
        this.setLayout(new BorderLayout());
        
        velocimetro = new Velocimetro();
        velocimetro.setVisible(true);
        velocimetro.setVelocidad(velocidad);
        this.add(velocimetro);
        
        cuentaKilometros = new CuentaKilometros();
        cuentaKilometros.setVisible(true);
        cuentaKilometros.setContadorReciente(distancia);
        cuentaKilometros.setContadorTotal(distancia);
        this.add(cuentaKilometros,BorderLayout.PAGE_END);
        
        cuentaRevoluciones = new CuentaRevoluciones();
        cuentaRevoluciones.setVisible(true);
        cuentaRevoluciones.setRevoluciones(rpm);
        this.add(cuentaRevoluciones,BorderLayout.EAST);
        
    }
    
    double getVelocidad()
    {
        return velocidad;
    }
    
    void setEstado(EstadoMotor estado)
    {
        this.estado = estado;
    }
    
    double getRPM()
    {
        return rpm;
    }
    
    EstadoMotor getEstado()
    {
        return estado;
    }
    
    void velocidad()
    {
        velocidad = 2*Math.PI*RADIO * rpm * (60.0/1000);
    }
    
    double duracion(){
        long tiempo = fin - inicio;       
        double duracion = (double)TimeUnit.MILLISECONDS.toSeconds(tiempo)/3600;
        return duracion;
    }
    
    double ejecutar(double revoluciones, EstadoMotor estadoMotor)
    {
        fin = System.currentTimeMillis();
        this.rpm = revoluciones;
        this.velocidad();
        this.distancia = this.velocidad * this.duracion();
        distanciaTotal += distancia;
        
        velocimetro.setVelocidad(velocidad);
        cuentaRevoluciones.setRevoluciones(rpm);
        cuentaKilometros.setContadorTotal(distanciaTotal);
        cuentaKilometros.setContadorReciente(distancia);
   
        return rpm;
    }

    void addWindowListener(WindowAdapter windowAdapter) {
        //creo que no hay que hacer nada
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents




    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
